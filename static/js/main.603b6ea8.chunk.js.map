{"version":3,"sources":["img/back.jpg","img/profile.jpg","Navigation.js","Header.js","About.js","Education.js","Contact.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","id","className","href","Component","myStyles","backgroundImage","Background","height","backgroundSize","Header","style","this","props","title","About","src","require","alt","class","Education","Contact","state","name","email","message","onSubmit","handleSubmit","bind","method","type","placeholder","value","onChange","onNameChange","onEmailChange","rows","onMessageChange","data-style","event","ListeningStateChangedEvent","target","preventDefault","fetch","body","JSON","stringify","headers","Accept","then","response","json","status","alert","resetForm","Boolean","window","location","hostname","match","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.603b6ea8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/back.8d2769bd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile.fd1d110a.jpg\";","import React, { Component } from \"react\";\nimport \"./Navigation.css\";\n\nclass Navigation extends Component {\n  render() {\n    return (\n      <nav id=\"nav\">\n        <ul className=\"navitems\">\n          <li>\n            <a href=\"#myheader\" className=\"nav-link\">\n              Home\n            </a>\n          </li>\n          <li>\n            <a href=\"#aboutkrm\" className=\"nav-link\">\n              About\n            </a>\n          </li>\n          <li>\n            <a href=\"#myeducation\" className=\"nav-link\">\n              Education\n            </a>\n          </li>\n          <li>\n            <a href=\"#contactme\" className=\"nav-link\">\n              Contact\n            </a>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from \"react\";\nimport Background from \"./img/back.jpg\";\nimport \"./Header.css\";\n\nconst myStyles = {\n  backgroundImage: `url(${Background})`,\n  height: \"100vh\",\n  backgroundSize: \"cover\"\n};\n\nclass Header extends Component {\n  render() {\n    return (\n      <section id=\"myheader\">\n        <header style={myStyles}>\n          <h1> {this.props.title}</h1>\n          <p> Developer | Designer </p>\n        </header>\n      </section>\n    );\n  }\n}\nexport default Header;\n","import React, { Component } from \"react\";\nimport \"./About.css\";\n\nclass About extends Component {\n  render() {\n    return (\n      <section id=\"aboutkrm\" className=\"section\">\n        <div className=\"container2\">\n          <div className=\"title\">\n            <h2 className=\"section-title\">About Me</h2>\n          </div>\n          <div className=\"row-content\">\n            <div className=\"col-left\">\n              <img src={require(\"./img/profile.jpg\")} alt=\"me\"></img>\n            </div>\n            <div className=\"col-right\">\n              <h4> Hi! </h4>\n              <p>\n                {\" \"}\n                I am a student at San Diego State University studying computer\n                science and mathematics. I love building exciting projects and\n                learning about new technologies. I am very passionate about\n                developing beautiful websites and mobile applications.\n              </p>\n\n              <p>\n                During my free time, I enjoy making and editing cinematic\n                videos, playing soccer, working out, or learning new skills. My\n                goals for 2020 are: Publish an iOS application on the app store,\n                work on a machine learning project and to get in the best shape\n                of my life.\n              </p>\n\n              <p>\n                Want to work together or simply have a chat? Feel free to reach\n                out to me on social media or send me an{\" \"}\n                <a href=\"#kmishra@sdsu.edu\">email.</a>\n              </p>\n            </div>\n            <div className=\"col-right\">\n              <ul className=\"social\">\n                <li>\n                  <a href=\"https://github.com/Kanekiark28\" title=\"Github\">\n                    <i class=\"fa fa-github\"></i>\n                  </a>\n                </li>\n                <li>\n                  <a\n                    href=\"https://www.linkedin.com/in/konarkrajmishra/\"\n                    title=\"Linkedin\"\n                  >\n                    <i class=\"fa fa-linkedin\"></i>\n                  </a>\n                </li>\n                <li>\n                  <a\n                    href=\"https://www.instagram.com/konarkisbrown/\"\n                    title=\"Instagram\"\n                  >\n                    <i class=\"fa fa-instagram\"></i>\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\nexport default About;\n","import React, { Component } from \"react\";\nimport \"./Education.css\";\n\nclass Education extends Component {\n  render() {\n    return (\n      <section id=\"myeducation\" className=\"sectionalt\">\n        <div className=\"container1\">\n          <div className=\"title\">\n            <h2 className=\"section-title\">Education</h2>\n          </div>\n          <div className=\"contedu\">\n            <div className=\"educontent\">\n              <div className=\"college\">\n                <h3> San Diego State University</h3>\n                <div className=\"school-meta\">\n                  Major - Computer Science\n                  <span class=\"bullet\"> â€¢ </span>\n                  Minor - Mathematics\n                </div>\n              </div>\n              <div className=\"college-text\">\n                <p1>\n                  {\" \"}\n                  Courses: Data Structures, Algorithms, Systems Programming,\n                  Databases, Speech Processing, Machine Learning.\n                </p1>\n                <p1>\n                  <strong> Technologies Used: Java, Python, C++.</strong>\n                </p1>\n\n                <p1>\n                  <strong>Anticipated Graduation: </strong>\n                  May 2021.\n                </p1>\n\n                <div className=\"school-meta\">\n                  Lead Web Developer - Sanskriti\n                </div>\n                <p1>\n                  Lead a team of 3 students to resdesign the cultural student\n                  organization's website for Indian Students.\n                </p1>\n                <p1>\n                  <strong>Technologies Used: React, Wordpress.</strong>\n                </p1>\n              </div>\n              <div className=\"separator\"> </div>\n            </div>\n\n            <div className=\"college\">\n              <h2 className=\"section-title2\">Work Experience</h2>\n              <h3>Internet Think Tank</h3>\n              <div className=\"school-meta\">Software Engineer Intern</div>\n\n              <div className=\"college-text\">\n                <p1>\n                  During my internship, I worked on the development and\n                  optimization of a web application as a blockchain project\n                  repository. This application was a web interface designed to\n                  develop blockchain projects in a colaborative environment to\n                  optimize workflow and automate the manual labor of project\n                  management.\n                </p1>\n                <strong>Technologies Used: PHP, JavaScript, HTML & CSS.</strong>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Education;\n","import React, { Component } from \"react\";\nimport \"./Contact.css\";\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      message: \"\"\n    };\n  }\n  render() {\n    return (\n      <section id=\"contactme\" className=\"section\">\n        <div className=\"container3\">\n          <div className=\"row\">\n            <div className=\"headline\">\n              <h2 className=\"section-title\">Let's get in touch</h2>\n            </div>\n          </div>\n          <div className=\"row contact-content\">\n            <div className=\"contact-row\">\n              <div className=\"contactme\">\n                <p>\n                  Want to work on exciting projects together, or simply want to\n                  have a chat? Drop me an e-mail at kmishra@sdsu.edu or simply\n                  fill out the form below and I will reply to you soon!\n                </p>\n              </div>\n              <div\n                className=\"form-contact-container\"\n                onSubmit={this.handleSubmit.bind(this)}\n                method=\"POST\"\n              >\n                <div className=\"contact-info\">\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    placeholder=\"Name\"\n                    value={this.state.name}\n                    onChange={this.onNameChange.bind(this)}\n                  ></input>\n                </div>\n                <div className=\"contact-info\">\n                  <input\n                    type=\"text\"\n                    name=\"email\"\n                    id=\"email\"\n                    placeholder=\"E-mail address\"\n                    value={this.state.email}\n                    onChange={this.onEmailChange.bind(this)}\n                  ></input>\n                </div>\n                <div className=\"contact-info\">\n                  <textarea\n                    name=\"message\"\n                    id=\"message\"\n                    rows=\"4\"\n                    placeholder=\"Your message\"\n                    value={this.state.message}\n                    onChange={this.onMessageChange.bind(this)}\n                  ></textarea>\n                </div>\n                <div className=\"contact-info\">\n                  <button className=\"buttonsend\" data-style=\"expand-right\">\n                    Send\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  onNameChange(event) {\n    this.ListeningStateChangedEvent({ name: event.target.value });\n  }\n\n  onEmailChange(event) {\n    this.ListeningStateChangedEvent({ email: event.target.value });\n  }\n\n  onMessageChange(event) {\n    this.ListeningStateChangedEvent({ message: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    fetch(\"http://localhost:3000/send\", {\n      method: \"POST\",\n      body: JSON.stringify(this.state),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response.status === \"success\") {\n          alert(\"Message Sent.\");\n          this.resetForm();\n        } else if (response.status === \"fail\") {\n          alert(\"Message failed to send.\");\n        }\n      });\n  }\n}\n\nexport default Contact;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n//import App from './App';\nimport Navigation from \"./Navigation\";\nimport Header from \"./Header\";\nimport About from \"./About\";\nimport Education from \"./Education\";\nimport Contact from \"./Contact\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <Header title=\"Konark Raj Mishra\" />\n        <About />\n        <Education />\n        <Contact />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}